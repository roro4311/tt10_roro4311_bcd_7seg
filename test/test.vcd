$date
	Wed Jan 15 12:47:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 8 ! uo_out [7:0] $end
$var wire 8 " uio_out [7:0] $end
$var wire 8 # uio_oe [7:0] $end
$var wire 1 $ seg_g $end
$var wire 1 % seg_f $end
$var wire 1 & seg_e $end
$var wire 1 ' seg_d $end
$var wire 1 ( seg_c $end
$var wire 1 ) seg_b $end
$var wire 1 * seg_a $end
$var reg 1 + clk $end
$var reg 1 , ena $end
$var reg 1 - rst_n $end
$var reg 8 . ui_in [7:0] $end
$scope module uut $end
$var wire 8 / ascii_out [7:0] $end
$var wire 1 + clk $end
$var wire 1 , ena $end
$var wire 1 - rst_n $end
$var wire 1 0 start $end
$var wire 8 1 ui_in [7:0] $end
$var wire 8 2 uio_in [7:0] $end
$var wire 8 3 uo_out [7:0] $end
$var wire 8 4 uio_out [7:0] $end
$var wire 8 5 uio_oe [7:0] $end
$var wire 7 6 seg_pattern [6:0] $end
$var wire 1 $ seg_g $end
$var wire 1 % seg_f $end
$var wire 1 & seg_e $end
$var wire 1 ' seg_d $end
$var wire 1 ( seg_c $end
$var wire 1 ) seg_b $end
$var wire 1 * seg_a $end
$var wire 1 7 ready_to_translate $end
$var wire 8 8 morse_code [7:0] $end
$var wire 1 9 dot $end
$var wire 1 : dash $end
$scope module btn_input $end
$var wire 1 ; button $end
$var wire 1 + clk $end
$var wire 1 < rst $end
$var reg 1 = button_reg $end
$var reg 1 > button_reg_d $end
$var reg 1 ? button_stable $end
$var reg 1 : dash $end
$var reg 32 @ debounce_cnt [31:0] $end
$var reg 1 9 dot $end
$upscope $end
$scope module morse_buf $end
$var wire 1 + clk $end
$var wire 1 : dash $end
$var wire 1 9 dot $end
$var wire 1 A rst $end
$var wire 1 0 start $end
$var reg 4 B bit_counter [3:0] $end
$var reg 8 C morse_code [7:0] $end
$var reg 8 D morse_out [7:0] $end
$var reg 1 7 ready_to_translate $end
$upscope $end
$scope module seg_decoder $end
$var wire 8 E ascii_in [7:0] $end
$var reg 7 F seg_out [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx F
bx E
bx D
b0 C
b0 B
1A
b0 @
0?
0>
0=
1<
0;
0:
09
bx 8
07
bx 6
b0 5
b0 4
bx 3
bz 2
b0 1
00
bx /
b0 .
0-
0,
1+
x*
x)
x(
x'
x&
x%
x$
b0 #
b0 "
bx !
$end
#5000
0+
#10000
1?
1=
1;
0<
0A
1+
1,
b1 .
b1 1
1-
#15000
0+
#20000
19
b1 @
0?
1>
1+
#20001
